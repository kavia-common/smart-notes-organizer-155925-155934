{"is_source_file": true, "format": "TypeScript", "description": "Angular component class for the main app, responsible for integrating various sub-components and handling note-related actions via the NoteService.", "external_files": ["./components/top-nav/top-nav.component", "./components/sidebar/sidebar.component", "./components/notes-list/notes-list.component", "./components/note-editor/note-editor.component", "./services/note.service", "./models/note.model", "./app.component.html", "./app.component.css"], "external_methods": ["this.noteService.filteredNotes$()", "this.noteService.folders$()", "this.noteService.selectedFolder$()", "this.noteService.selectedNoteId$()", "this.noteService.selectedNote$()", "this.noteService.setSearchQuery()", "this.noteService.createNote()", "this.noteService.setSelectedFolder()", "this.noteService.selectNote()", "this.noteService.deleteNote()", "this.noteService.togglePinned()", "this.noteService.updateNote()"], "published": ["AppComponent"], "classes": [{"name": "AppComponent", "description": "Main Angular component class orchestrating note management and rendering templates."}], "methods": [{"name": "onSearch", "description": "Handles search input and updates the note service with the query."}, {"name": "onNewNote", "description": "Triggers creation of a new note via the note service."}, {"name": "onFolderChange", "description": "Updates the selected folder in the note service."}, {"name": "onSelectNote", "description": "Selects a note by its ID via the note service."}, {"name": "onDeleteNote", "description": "Deletes a note by its ID via the note service."}, {"name": "onTogglePinned", "description": "Toggles the pinned status of a note."}, {"name": "onSaveNote", "description": "Saves/updates a note via the note service."}], "calls": ["inject(NoteService)", "this.noteService.filteredNotes$()", "this.noteService.folders$()", "this.noteService.selectedFolder$()", "this.noteService.selectedNoteId$()", "this.noteService.selectedNote$()", "this.noteService.setSearchQuery(query)", "this.noteService.createNote()", "this.noteService.setSelectedFolder(folder)", "this.noteService.selectNote(id)", "this.noteService.deleteNote(id)", "this.noteService.togglePinned(id)", "this.noteService.updateNote(note)"], "search-terms": ["Angular", "Component", "NoteService", "Notes List", "Notes", "Note Editor", "Folder", "Pinned", "Observable", "Dependency Injection", "app.component"], "state": 2, "file_id": 7, "knowledge_revision": 76, "git_revision": "d5840e7464731ab8c04fe8024de83d28366d8128", "revision_history": [{"31": "d5840e7464731ab8c04fe8024de83d28366d8128"}, {"70": "d5840e7464731ab8c04fe8024de83d28366d8128"}, {"76": "d5840e7464731ab8c04fe8024de83d28366d8128"}], "ctags": [{"_type": "tag", "name": "AppComponent", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-155925-155934/notes_frontend/src/app/app.component.ts", "pattern": "/^export class AppComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "noteService", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-155925-155934/notes_frontend/src/app/app.component.ts", "pattern": "/^  private noteService = inject(NoteService);$/", "language": "TypeScript", "kind": "property", "scope": "AppComponent", "scopeKind": "class"}], "hash": "8e4292d587b400a84f71d92a70dd852e", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/app.component.ts", "fields": [{"name": "private noteService = inject(NoteService);", "scope": "AppComponent", "scopeKind": "class", "description": "unavailable"}]}